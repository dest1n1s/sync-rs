name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: linux-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-aarch64
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation tools (if needed)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build Release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}

      - name: Package Artifacts
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/sync-rs release/sync-rs-${{ matrix.name }}

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Set up environment
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          sudo apt-get update
          sudo apt-get install -y curl jq

      - name: Update AUR package
        if: github.repository_owner == 'dest1n1s'
        env:
          AUR_SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
        run: |
          if [ -n "$AUR_SSH_PRIVATE_KEY" ]; then
            ./contrib/aur/setup-aur-ssh.sh "$AUR_SSH_PRIVATE_KEY"
            ./contrib/aur/update-aur.sh $VERSION
          else
            echo "AUR_SSH_PRIVATE_KEY not set, skipping AUR update"
          fi

      - name: Update Homebrew formula
        if: github.repository_owner == 'dest1n1s'
        env:
          HOMEBREW_GITHUB_TOKEN: ${{ secrets.HOMEBREW_GITHUB_TOKEN }}
        run: |
          if [ -n "$HOMEBREW_GITHUB_TOKEN" ]; then
            ./contrib/homebrew/setup-git-auth.sh "$HOMEBREW_GITHUB_TOKEN"
            ./contrib/homebrew/update-homebrew.sh $VERSION
          else
            echo "HOMEBREW_GITHUB_TOKEN not set, skipping Homebrew update"
          fi
